//querydsl 추가
buildscript {
	dependencies {
		classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10")
	}
}

plugins {
	id 'org.springframework.boot' version '2.4.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.sinisiro'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.projectlombok:lombok:1.18.18'
    compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'				//gson
	implementation "io.springfox:springfox-boot-starter:3.0.0"		//swagger
//	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	//JUnit4 추가
	testImplementation("org.junit.vintage:junit-vintage-engine") {
	exclude group: "org.hamcrest", module: "hamcrest-core" }

	//MockAPI 08.11.
	testCompile("org.springframework.boot:spring-boot-starter-test")

	//querydsl 추가
	implementation'com.querydsl:querydsl-jpa'
	//querydsl 추가
 	implementation 'com.querydsl:querydsl-apt'


}
test {
	useJUnitPlatform()
}



apply plugin: 'io.spring.dependency-management'
apply plugin: "com.ewerk.gradle.plugins.querydsl"

//querydsl 추가
//def querydslDir = 'src/main/generated'
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	library = "com.querydsl:querydsl-apt"
	jpa = true
	querydslSourcesDir = querydslDir
}


sourceSets {
	main {
		java {
		srcDirs = ['src/main/java', querydslDir]
			}
		}
}

compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}
configurations {
	querydsl.extendsFrom compileClasspath
}